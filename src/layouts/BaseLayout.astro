---
import '../styles/global.css'
import MainNavBar from '../components/MainNavBar.astro'
import '@fontsource-variable/open-sans'
import MainFooter from '../components/MainFooter.astro'

interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang="en" class="h-full overflow-y-scroll bg-slate-300 dark:bg-theme-800">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!--<meta-->
    <!--  http-equiv="Content-Security-Policy"-->
    <!--  content="script-src 'self' 'unsafe-inline'; object-src 'none'; require-trusted-types-for 'script'"-->
    <!--/>-->
    <link rel="manifest" href="/manifest.webmanifest" />
    <link rel="icon" href="/favicons/favicon-1024x1024.svg" type="image/svg+xml" />
    <link rel="icon" href="/favicon.ico" sizes="32x32" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />

    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script is:inline>
      // Duplicate code because must be inline to prevent flash on load. I don't know how to
      // import or share javascript in an inline context with astro.
      let themeClass = ''
      const storedTheme = localStorage.getItem('themeMode')
      switch (storedTheme) {
        case 'DARK':
          themeClass = 'dark'
          break
        case 'LIGHT':
          themeClass = 'light'
          break
        default:
          themeClass = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
      }

      if (themeClass === 'light') {
        document.documentElement.classList.remove('dark')
        document.documentElement.setAttribute('data-theme', 'light')
      } else {
        document.documentElement.classList.add('dark')
        document.documentElement.setAttribute('data-theme', 'dark')
      }
    </script>
  </head>
  <body>
    <MainNavBar />
    <main>
      <!--<div class="container mx-auto xl:px-[10rem] 2xl:px-[20rem]">-->
      <div class="container mx-auto xl:px-[10rem] 2xl:px-[20rem]">
        <slot />
      </div>
    </main>
    <MainFooter />
  </body>
  <!--<style is:global>
  :root {
    &#45;&#45;accent: 136, 58, 234;
    &#45;&#45;accent-light: 224, 204, 250;
    &#45;&#45;accent-dark: 49, 10, 101;
    &#45;&#45;accent-gradient: linear-gradient(
      45deg,
      rgb(var(&#45;&#45;accent)),
      rgb(var(&#45;&#45;accent-light)) 30%,
      white 60%
    );
  }

  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  @layer base {
    h1 {
      @apply text-2xl;
    }
    h2 {
      @apply text-xl;
    }
    main {
      border: 1px solid red;
    }
  }
</style>-->
</html>
